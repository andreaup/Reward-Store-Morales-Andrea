{"version":3,"sources":["reducers/index.js","store.js","components/RepoList.js","containers/Search.js","containers/Repos.js","components/App.js","index.js"],"names":["combineReducers","repos","state","action","type","loadingError","hasErrored","loadingInProgress","isLoading","logger","store","next","result","console","groupCollapsed","log","getState","groupEnd","storeFactory","createStore","rootReducer","applyMiddleware","thunk","RepoList","hasError","className","map","repo","i","key","href","html_url","target","name","stargazers_count","connect","App","Search","user","Repos","render","document","getElementById"],"mappings":"qNA+BeA,cAAgB,CAC7BC,MAZY,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACpC,OAAQA,EAAOC,MACb,IAAK,kBACH,OAAOD,EAAOF,MAChB,IAAK,cACH,MAAO,GACT,QACE,OAAOC,IAMXG,aA/BmB,WAA4B,IAA3BH,EAA0B,wDAAXC,EAAW,uCAC9C,OAAQA,EAAOC,MACb,IAAK,gBACH,OAAOD,EAAOG,WAChB,QACE,OAAOJ,IA2BXK,kBAvBwB,WAA4B,IAA3BL,EAA0B,wDAAXC,EAAW,uCACnD,OAAQA,EAAOC,MACb,IAAK,sBACH,OAAOD,EAAOK,UAChB,QACE,OAAON,M,OCZPO,EAAS,SAAAC,GAAK,OAAI,SAAAC,GAAI,OAAI,SAAAR,GAC9B,IAAIS,EAOJ,OANAC,QAAQC,eAAe,cAAeX,EAAOC,MAC7CS,QAAQE,IAAI,eAAgBL,EAAMM,YAClCH,QAAQE,IAAI,WAAYZ,GACxBS,EAASD,EAAKR,GACdU,QAAQE,IAAI,eAAgBL,EAAMM,YAClCH,QAAQI,WACDL,KASMM,EANM,kBACnBC,YACEC,EACAC,YAAgBZ,EAAQa,OC6BbC,EA5CE,SAAC,GAAoC,IAAlCtB,EAAiC,EAAjCA,MAAOuB,EAA0B,EAA1BA,SAAUhB,EAAgB,EAAhBA,UACnC,OAAIgB,EAEA,yBAAKC,UAAU,aACb,6EAKFjB,EAEA,yBAAKiB,UAAU,aACb,8CAMJ,yBAAKA,UAAU,aACZxB,EAAMyB,KAAI,SAACC,EAAMC,GAAP,OACT,yBACEH,UAAU,kDACVI,IAAKD,GAEL,yBAAKH,UAAU,QACb,uBAAGK,KAAMH,EAAKI,SAAUN,UAAU,eAAeO,OAAO,SACrDL,EAAKM,MAER,0BAAMR,UAAU,yCACbE,EAAKO,yBCtBLC,eANS,SAAAjC,GAAK,MAAK,CAChCD,MAAOC,EAAMD,MACbuB,SAAUtB,EAAMG,aAChBG,UAAWN,EAAMK,qBAKjB,KAFa4B,CAGbZ,GCHaY,eANS,SAAAjC,GAAK,MAAK,CAChCD,MAAOC,EAAMD,MACbuB,SAAUtB,EAAMG,aAChBG,UAAWN,EAAMK,qBAKjB,KAFa4B,CAGbZ,GCFaa,EAPH,kBACV,6BACE,kBAACC,EAAD,CAAQC,KAAK,aACb,kBAACC,EAAD,QCAE7B,EAAQQ,IAEdsB,iBACE,kBAAC,IAAD,CAAU9B,MAAOA,GACf,kBAAC,EAAD,OAEF+B,SAASC,eAAe,W","file":"static/js/main.52a837aa.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\n\r\nconst loadingError = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"LOADING_ERROR\":\r\n      return action.hasErrored;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst loadingInProgress = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"LOADING_IN_PROGRESS\":\r\n      return action.isLoading;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst repos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"LOADING_SUCCESS\":\r\n      return action.repos;\r\n    case \"CLEAR_REPOS\":\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  repos,\r\n  loadingError,\r\n  loadingInProgress\r\n});\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport rootReducer from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst logger = store => next => action => {\r\n  let result\r\n  console.groupCollapsed('dispatching', action.type)\r\n  console.log('prev state: ', store.getState())\r\n  console.log('action: ', action)\r\n  result = next(action)\r\n  console.log('next state: ', store.getState())\r\n  console.groupEnd()\r\n  return result\r\n}\r\n\r\nconst storeFactory = () =>\r\n  createStore(\r\n    rootReducer,\r\n    applyMiddleware(logger, thunk)\r\n  )\r\n\r\nexport default storeFactory\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst RepoList = ({ repos, hasError, isLoading }) => {\r\n  if (hasError) {\r\n    return (\r\n      <div className=\"container\">\r\n        <h6>Sorry! There was an error loading the repos.</h6>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <h6>Loadingâ€¦</h6>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {repos.map((repo, i) => (\r\n        <div\r\n          className=\"row border border-info rounded bg-light p-2 m-1\"\r\n          key={i}\r\n        >\r\n          <div className=\"ml-2\">\r\n            <a href={repo.html_url} className=\"text-primary\" target=\"blank\">\r\n              {repo.name}\r\n            </a>\r\n            <span className=\"badge badge-pill badge-secondary ml-2\">\r\n              {repo.stargazers_count}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nRepoList.propTypes = {\r\n  repos: PropTypes.array,\r\n  hasError: PropTypes.bool,\r\n  isLoading: PropTypes.bool\r\n};\r\n\r\nexport default RepoList;\r\n","import { connect } from 'react-redux'\r\nimport RepoList from '../components/RepoList'\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  repos: state.repos,\r\n  hasError: state.loadingError,\r\n  isLoading: state.loadingInProgress\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(RepoList)\r\n","import { connect } from 'react-redux'\r\nimport RepoList from '../components/RepoList'\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  repos: state.repos,\r\n  hasError: state.loadingError,\r\n  isLoading: state.loadingInProgress\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(RepoList)\r\n","import React from \"react\";\r\nimport Search from \"../containers/Search\";\r\nimport Repos from \"../containers/Repos\";\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Search user=\"facebook\" />\r\n    <Repos />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport storeFactory from './store'\nimport App from './components/App'\n\n\nconst store = storeFactory()\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}